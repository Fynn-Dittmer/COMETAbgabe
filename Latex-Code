\documentclass{article}

\usepackage{graphicx} % Required for inserting images
\usepackage{amsmath}
\usepackage{hyperref}
\usepackage{amsfonts}
\usepackage{parskip} % für Absätze\usepackage{amsfonts}  % Für \mathbb
\usepackage{amsmath}   % Für mathematische Operatoren

\usepackage[utf8]{inputenc} 
\usepackage[ngerman]{babel} 
\usepackage[T1]{fontenc}   

\usepackage{url} % benötigt für URL in Literaturverzeichnis

\title{Abgabe 1 für Computergestützte Methoden}
\author{Gruppe 95, \\ Fynn Dittmer 4348289, \\
Marlon Bartling 4099139,  \\
Mathis Nürnberger 2614029}
\date{01.12.2024}

\begin{document}

% Title, Autor und Datum erzeugen
\maketitle


% Inhaltsverzeichnis
\tableofcontents

% starte mit dem Inhalt auf der nächsten Seite
\newpage

\section {Der zentrale Grenzwertsatz}

Der zentrale Grenzwertsatz (ZGS) ist ein fundamentales Resultat der Wahrscheinlichkeitstheorie, das die Verteilung von Summen unabhängiger, identisch verteilter $(i.i.d.)$ Zufallsvariablen (ZV) beschreibt. Er besagt, dass unter bestimmten Voraussetzungen die Summe einer großen Anzahl solcher ZV \mbox{annähernd} normalverteilt ist, unabhängig von der Verteilung der einzelnen ZV. Dies ist besonders nutzlich, da die Normalverteilung gut untersucht und mathematisch handhabbar ist.

\subsection{Aussage}

% Textformatierung
Sei $X_1, X_2, . . . , X_n$ eine Folge von $i.i.d.$ ZV mit dem Erwartungswert $\mu$ = $\mathbb{E}(X_i)$ und der Varianz $\sigma^2$ $=$ Var$(X_i)$, wobei 0 < $\sigma^2$ < $\infty$ gelte. 
Dann konvergiert die standardisierte Summe $Z_n$ dieser ZV fur  $n$ → $\infty$ in Verteilung gegen eine Standardnormalverteilung:\footnote{Der zentrale Grenzwertsatz hat verschiedene Verallgemeinerungen. Eine davon ist der \textbf{Lindeberg-Feller-Zentrale-Grenzwertsatz} [\cite{Klenke}, Seite 328], der schwächere Bedingungen an
die Unabhängigkeit und die identische Verteilung der ZV stellt.}


\begin{equation}
Z_n = \frac{\sum_{i=1}^n X_i - n\mu}{\sigma \sqrt{n}} \xrightarrow{d} \mathcal{N}(0, 1).
\label{1}
\end{equation}


Das bedeutet, dass für große $n$ die Summe der ZV nährungsweise normalverteilt ist mit Erwartungswert $n\mu$ und der Varianz $n\sigma^2$:
\begin{equation}
\sum_{i=1}^n X_i \sim \mathcal{N}(n\mu, n\sigma^2).
\label{2}
\end{equation}



\subsection{Erklärung der Standardisierung}
Um die Summe der ZV in eine Standardnormalverteilung zu transformieren, subtrahiert man den Erwartungswert $n\mu$ und teilt durch die Standardabweichung $\sigma\sqrt(n)$.
Dies führt zu der obigen Formel \eqref{1}. Die Darstellung \eqref{2} ist für $n$ → $\infty$ nicht wohldefiniert.

\subsection{Anwendungen}
Der ZGS wird in vielen Bereichen der Statistik und der Wahrscheinlichkeitstheorie angewendet. Typische Beispiele sind:
\begin{itemize}
    \item Die Berechnung von Konfidenzintervallen
    \item Die Approximation von Wahrscheinlichkeiten für Summen oder Mittelwerte
\end{itemize}

\subsection{Github Link}
Mit folgendem Link kommt man zur Github-Seite mit den für die Erstellung des Dokumentes verwendeten Befehlen: 

https://github.com/Fynn-Dittmer/COMETAbgabe/tree/main


\section{Bearbeitung zu Aufgabe 1}

\subsection{Thema Datenverarbeitung}
\textbf{Untersuchen Sie den für Ihre Gruppe relevanten Teil der Daten und beschreiben Sie ihre Erkenntnisse}\\
Bei der Untersuchung der Daten fällt einem auf, dass es sich um eine csv-Datei handelt, also um kommaseparierte Daten.
Außerdem ist auffällig, dass jede Gruppe eine eigene Station zugewiesen bekommen hat.
Bei dieser Station werden an allen Tagen im Jahre 2023 jeweils einmal täglich verschiedene Werte ermittelt, welche in der Tabelle enthalten sind.\\
Die verschiedenen Werte, welche ermittelt wurden, sind Datum, Tag des Jahres, Tag der Woche, Monat des Jahres, Niederschlag, Windgeschwindigkeit, Mindesttemperatur, Durchschnittstemperatur, Maximaltemperatur und die Anzahl der geliehenen Fahrräder.
Ebenfalls fällt auf, dass manche Daten fehlen und stattdessen ein $"$NA$"$ in der Tabelle steht.

\textbf{Importieren Sie den Datensatz in eine Tabellenkalulation}\\
Um die Daten zu importieren, kann man nach dem Herunterladen der Datei, auf die Datei klicken, und sie wird automatisch in der Tabellenkalkulation Excel geladen.

\textbf{Berechnen Sie für den Ihrer Gruppe zugeordneten Datenteil die höchste mittlere Temperatur in Grad Celsius} \\
Für die Berechnung der höchsten mittleren Temperatur der Daten der Gruppe 95 sorgt man zuerst dafür, dass die Tabelle übersichtlicher ist.
Dafür teilt man jedem Datenpunkt seine eigene Spalte zu indem man auf 

Daten=>Text in Spalten 

klickt. 
Zusätzlich wenden wir einen Filter an welcher die Daten aller anderen Gruppen entfernt.
Dafür klicken wir auf group, klicken dann auf Filter um einen Filter zu erzeugen, blenden alle Gruppen aus und dann Gruppe 95 wieder ein.
Nun haben wir in den Zeilen 34260 bis 34624 die Daten unserer Gruppe und in der J Spalte die Daten zur mittleren Temperatur.
Mit dem Befehl 
\begin{verbatim}
=MAX(J34260:J34624)
\end{verbatim}

können wir nun den gesuchten Wert ermitteln.
Bei dem ermittelten Wert handelt es sich um 83, dabei handelt es sich jedoch wahrscheinlich um Fahrenheit, sodass der Wert umgewandelt werden muss.
Die höchste mittlere Temperatur ist somit bei 28,3 Grad Celsius.

Alternativ kann man den gesuchten Wert mit der Formel
\begin{verbatim}
=((MAX(J34260:J34624)-32)*5/9)
\end{verbatim}
direkt berechnen und 28.3333333 erhalten.


\subsection{Thema Datenhaltung}
\textbf{2. Entwerfen Sie im Abgabe-Dokument ein Datenbank-Schema} \\
Um ein Datenbank-Schema zu entwerfen, müssen wir sicherstellen, dass die erste und zweite Normalform erfüllt sind.
Für die erste Normalform müssen alle Attribute atomar sein also alle nichtatomaren Attribute entfernt werden.
Für die zweite Normalform müssen alle Nichtschlüssel-Attribute alleine vom Primärschlüssel abhängen und die Daten müssen in mehrer Tabellen aufgetrennt werden.
Unser Datenbank-Schema könnte dann wiefolgt aussehen:
\begin{itemize}

\item Station(\underline{station}, \underline{date})
\item Buchungen(\underline{date},count)
\item Wetter(\underline{date}, precipitation, windspeed)
\item Temperatur(\underline{date}, min\_temperature, average\_temperature, max\_temperature) 
\item Datum(\underline{date}, day\_of\_year, day\_of\_week, month\_of\_year ) 
\end{itemize}


\textbf{3. Definieren sie mit dem DDL-Teil von SQL die Tabellen.} \\
Als nächstes müssen wir die Tabellen in SQL definieren.
Dafür nutzen wir folgende Befehle:

\begin{verbatim}
    

create table "Station"(
    "station" TEXT,
    "date" TEXT 
    PRIMARY KEY("date"));

create table "Buchungen"(
    "date" TEXT, 
    "count" INTEGER 
    PRIMARY KEY("date"));

create table "Wetter" (
    "date" TEXT, 
    "precipitation" NUMERIC, 
    "windspeed" NUMERIC
    PRIMARY KEY("date"));


\end{verbatim}

\newpage

\begin{verbatim}

create table "Temperatur" (
	"date"	TEXT,
	"min_temperature"	INTEGER,
	"average_temperature"	INTEGER,
	"max_temperature"	INTEGER,
	PRIMARY KEY("date"));

create table "Datum" (
    "date" TEXT,
    "day_of_year" TEXT,
    "day_of_week" TEXT,
    "month_of_year" TEXT 
    PRIMARY KEY("date"));

\end{verbatim}

Wir haben die Daten in fünf Tabellen aufgeteilt und alle Werte  bis auf die Gruppennummer verarbeitet, die Gruppennummer haben wir entfernt, weil die Daten der anderen Gruppen für unsere Station bedeutungslos sind.
Falls die Daten der anderen Gruppen beibehalten werden sollen, könnte man einen zusammengesetzen Primary Key bestehend aus group und date nutzen.

Die Daten wurden in folgende fünf Tabellen unterteilt:
Die erste Tabelle enthält den Namen der Station und das Datum, der Stationsname bräuchte theoretisch keine eigene Tabelle da er immer derselbe ist aber die Tabelle könnte verwendet werden um die Daten der Gruppe von Daten anderen Gruppen zu unterscheiden da es eine Redundanz der Gruppennummer ist.

Die zweite Tabelle enthält Daten zu den Buchungen und setzt die Anzahl der Buchungen mit dem Primärschlüssel des Datums in Verbindung.

Die dritte Tabelle enthält Wetterdaten zu Windgeschwindigkeit und Niederschlag.

Die vierte Tabelle enthält alle Daten zum Thema Temperatur.

Die letzte Tabelle enthält Informationen bezüglich der Zeit und ordnet jedem Datum einen Wochentag, Monatstag und Monat zu.

    



\textbf{4. Bereiten Sie Datensatz so vor, dass die Datensätze in
die passenden Tabellen importiert werden können.} \\
Um den Datensatz so vorzubereiten, dass die Datensätze in die passenden Tabellen importiert werden können, muss dafür gesorgt werden, dass die Daten in verschiedene Excel-Tabellen gepackt werden damit man diese dann einzeln in die SQL-Tabellen importiert werden können und auch nur die richtigen Daten importiert werden.
Wir erstellen also je eine Excel-Datei für die verschiedenen Tabellen und entfernen alle Daten welche nicht zur jeweiligen Tabelle gehören.

Dafür löschen wir zuerst alle Daten welche nicht zu unserer Gruppe gehören indem wir die Daten der Gruppe 95 markieren, in eine neue Tabelle kopieren und die alte Tabelle löschen.
Dann kopieren wir die Daten für die jeweilige Tabelle und fügen sie in eine neue Tabelle ein, sodass am Ende nur noch die gewollten Attribute enthalten sind.

Wenn wir die Daten in sql importieren, müssen wir zuerst den Separator umstellen. \\
Wenn wir uns die Excel-Dateien anschauen indem wir sie rechtsklicken und auf bearbeiten gehen, sehen wir, dass die Daten mit einem ; separiert werden und mit dem Befehl 
\begin{verbatim}
.separator ;  
\end{verbatim}
stellen wir den Separator so ein, dass er die Daten alle gut erkennen kann.
Ebenfalls muss dafür gesorgt werden, dass die erste Spalte als Überschrift erkannt wird indem 
\begin{verbatim}
.headers on    
\end{verbatim}
eingegeben wird.
Dann importieren wir die Daten indem wir den Befehl 
\begin{verbatim}
.import FILE TABLE 
\end{verbatim}
 
nutzen, FILE muss dabei der Dateipfad der csv-Datei und TABLE der Name der Tabelle sein. Den Dateipfad kann man entweder kopieren oder man zieht die Datei in sql rein.

\textbf{Formulieren Sie eine Abfrage, um aus den Ihrer Gruppe zugeordneten Daten die höchste mittlere Temperatur herauszufiltern} \\
Zum Schluss können wir dann mit dem Befehl 
\begin{verbatim}
selcect max(average_temperature) FROM Temperatur 
WHERE "average_temperature"!="NA"
\end{verbatim}

die maximale mittlere Temperatur unserer Daten ermitteln.
Die maximale Temperatur sind in diesem Fall 83Fahrenheit bzw. 28,3Grad Celsius. \\ \\
Es ist auch möglich die maximale Temperatur direkt in Celsius zu erhalten indem man folgenden Befehl eingibt und 28.33333333 als Antwort erhält: 
\begin{verbatim}
select max(average_temperature - 32) * 5.0 / 9.0 FROM Temperatur 
WHERE "average_temperature"!="NA"
    
\end{verbatim}

\newpage

\bibliographystyle{plain}
\bibliography{references}




\end{document}
